{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ToastContext from \"./context\";\nimport Toast from \"../toast-container\";\nexport var GlobalToast;\nvar ToastProvider = function ToastProvider(_ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var toastRef = useRef(null);\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    refState = _useState2[0],\n    setRefState = _useState2[1];\n  useEffect(function () {\n    setRefState(toastRef.current);\n    GlobalToast = toastRef.current;\n  }, []);\n  return React.createElement(ToastContext.Provider, {\n    value: refState\n  }, children, React.createElement(Toast, _extends({\n    ref: toastRef\n  }, props)));\n};\nexport default ToastProvider;","map":{"version":3,"names":["React","useEffect","useRef","useState","ToastContext","Toast","GlobalToast","ToastProvider","_ref","children","props","_objectWithoutProperties","_excluded","toastRef","_useState","_useState2","_slicedToArray","refState","setRefState","current","createElement","Provider","value","_extends","ref"],"sources":["/home/micah/Documents/aia-staff-osen-main/node_modules/react-native-toast-notifications/lib/module/hook/provider.tsx"],"sourcesContent":["import React, { FC, useEffect, useRef, useState } from \"react\";\r\nimport ToastContext, { ToastType } from \"./context\";\r\nimport Toast, { Props } from \"../toast-container\";\r\n\r\ntype PropsWithChildren = Props & {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport let GlobalToast: ToastType\r\n\r\nconst ToastProvider: FC<PropsWithChildren> = ({ children, ...props }) => {\r\n  const toastRef = useRef(null);\r\n  const [refState, setRefState] = useState({});\r\n\r\n  useEffect(() => {\r\n    setRefState(toastRef.current as any);\r\n    GlobalToast = toastRef.current as any\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider value={refState as any}>\r\n      {children}\r\n      <Toast ref={toastRef} {...props} />\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ToastProvider;\r\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,YAAP;AACA,OAAOC,KAAP;AAMA,OAAO,IAAIC,WAAJ;AAEP,IAAMC,aAAoC,GAAG,SAAvCA,aAAoCA,CAAAC,IAAA,EAA+B;EAAA,IAAzBC,QAAF,GAAAD,IAAA,CAAEC,QAAF;IAAeC,KAAA,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;EAC3D,IAAMC,QAAQ,GAAGX,MAAM,CAAC,IAAD,CAAvB;EACA,IAAAY,SAAA,GAAgCX,QAAQ,CAAC,EAAD,CAAxC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAOG,QAAD,GAAAF,UAAA;IAAWG,WAAX,GAAAH,UAAA;EAENd,SAAS,CAAC,YAAM;IACdiB,WAAW,CAACL,QAAQ,CAACM,OAAV,CAAX;IACAb,WAAW,GAAGO,QAAQ,CAACM,OAAvB;EACD,CAHQ,EAGN,EAHM,CAAT;EAKA,OACEnB,KAAA,CAAAoB,aAAA,CAAChB,YAAD,CAAciB,QAAd;IAAuBC,KAAK,EAAEL;EAA9B,GACGR,QADH,EAEET,KAAA,CAAAoB,aAAA,CAACf,KAAD,EAAAkB,QAAA;IAAOC,GAAG,EAAEX;EAAZ,GAA0BH,KAA1B,EAFF,CADF;AAMD,CAfD;AAiBA,eAAeH,aAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}