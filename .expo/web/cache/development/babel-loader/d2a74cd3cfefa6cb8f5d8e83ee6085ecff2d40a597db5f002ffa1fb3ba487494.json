{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/micah/Documents/aia-staff-osen-main/node_modules/react-native-calendars/src/calendar-list/index.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport findIndex from 'lodash/findIndex';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { extractCalendarProps, extractHeaderProps } from \"../componentUpdater\";\nimport { parseDate, toMarkingFormat, xdateToData } from \"../interface\";\nimport { page, sameDate, sameMonth } from \"../dateutils\";\nimport constants from \"../commons/constants\";\nimport { useDidUpdate } from \"../hooks\";\nimport styleConstructor from \"./style\";\nimport Calendar from \"../calendar\";\nimport CalendarListItem from \"./item\";\nimport CalendarHeader from \"../calendar/header/index\";\nimport isEqual from 'lodash/isEqual';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CALENDAR_WIDTH = constants.screenWidth;\nvar CALENDAR_HEIGHT = 360;\nvar PAST_SCROLL_RANGE = 50;\nvar FUTURE_SCROLL_RANGE = 50;\nvar CalendarList = function CalendarList(props, ref) {\n  useImperativeHandle(ref, function () {\n    return {\n      scrollToDay: function scrollToDay(date, offset, animated) {\n        _scrollToDay(date, offset, animated);\n      },\n      scrollToMonth: function scrollToMonth(date) {\n        _scrollToMonth(date);\n      }\n    };\n  });\n  var theme = props.theme,\n    current = props.current,\n    firstDay = props.firstDay,\n    markedDates = props.markedDates,\n    headerStyle = props.headerStyle,\n    onMonthChange = props.onMonthChange,\n    onVisibleMonthsChange = props.onVisibleMonthsChange,\n    _props$pastScrollRang = props.pastScrollRange,\n    pastScrollRange = _props$pastScrollRang === void 0 ? PAST_SCROLL_RANGE : _props$pastScrollRang,\n    _props$futureScrollRa = props.futureScrollRange,\n    futureScrollRange = _props$futureScrollRa === void 0 ? FUTURE_SCROLL_RANGE : _props$futureScrollRa,\n    _props$calendarHeight = props.calendarHeight,\n    calendarHeight = _props$calendarHeight === void 0 ? CALENDAR_HEIGHT : _props$calendarHeight,\n    _props$calendarWidth = props.calendarWidth,\n    calendarWidth = _props$calendarWidth === void 0 ? CALENDAR_WIDTH : _props$calendarWidth,\n    calendarStyle = props.calendarStyle,\n    _props$animateScroll = props.animateScroll,\n    animateScroll = _props$animateScroll === void 0 ? false : _props$animateScroll,\n    _props$showScrollIndi = props.showScrollIndicator,\n    showScrollIndicator = _props$showScrollIndi === void 0 ? false : _props$showScrollIndi,\n    staticHeader = props.staticHeader,\n    testID = props.testID,\n    propsStyle = props.style,\n    onLayout = props.onLayout,\n    removeClippedSubviews = props.removeClippedSubviews,\n    _props$horizontal = props.horizontal,\n    horizontal = _props$horizontal === void 0 ? false : _props$horizontal,\n    pagingEnabled = props.pagingEnabled,\n    _props$scrollEnabled = props.scrollEnabled,\n    scrollEnabled = _props$scrollEnabled === void 0 ? true : _props$scrollEnabled,\n    _props$nestedScrollEn = props.nestedScrollEnabled,\n    nestedScrollEnabled = _props$nestedScrollEn === void 0 ? true : _props$nestedScrollEn,\n    _props$scrollsToTop = props.scrollsToTop,\n    scrollsToTop = _props$scrollsToTop === void 0 ? false : _props$scrollsToTop,\n    _props$keyExtractor = props.keyExtractor,\n    keyExtractor = _props$keyExtractor === void 0 ? function (_, index) {\n      return String(index);\n    } : _props$keyExtractor,\n    keyboardShouldPersistTaps = props.keyboardShouldPersistTaps,\n    onScrollBeginDrag = props.onScrollBeginDrag,\n    onScrollEndDrag = props.onScrollEndDrag,\n    onMomentumScrollBegin = props.onMomentumScrollBegin,\n    onMomentumScrollEnd = props.onMomentumScrollEnd,\n    onEndReachedThreshold = props.onEndReachedThreshold,\n    onEndReached = props.onEndReached;\n  var calendarProps = extractCalendarProps(props);\n  var headerProps = extractHeaderProps(props);\n  var calendarSize = horizontal ? calendarWidth : calendarHeight;\n  var _useState = useState(parseDate(current)),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentMonth = _useState2[0],\n    setCurrentMonth = _useState2[1];\n  var shouldUseAndroidRTLFix = useMemo(function () {\n    return constants.isAndroidRTL && horizontal;\n  }, [horizontal]);\n  var style = useRef(styleConstructor(theme));\n  var list = useRef();\n  var range = useRef(horizontal ? 1 : 3);\n  var initialDate = useRef(parseDate(current) || new XDate());\n  var visibleMonth = useRef(currentMonth);\n  var items = useMemo(function () {\n    var months = [];\n    for (var i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n      var _initialDate$current;\n      var rangeDate = (_initialDate$current = initialDate.current) == null ? void 0 : _initialDate$current.clone().addMonths(i - pastScrollRange, true);\n      months.push(rangeDate);\n    }\n    return months;\n  }, [pastScrollRange, futureScrollRange]);\n  var staticHeaderStyle = useMemo(function () {\n    return [style.current.staticHeader, headerStyle];\n  }, [headerStyle]);\n  var listStyle = useMemo(function () {\n    return [style.current.container, propsStyle];\n  }, [propsStyle]);\n  var initialDateIndex = useMemo(function () {\n    return findIndex(items, function (item) {\n      var _initialDate$current2;\n      return item.toString() === ((_initialDate$current2 = initialDate.current) == null ? void 0 : _initialDate$current2.toString());\n    });\n  }, [items]);\n  var getDateIndex = useCallback(function (date) {\n    return findIndex(items, function (item) {\n      return item.toString() === date.toString();\n    });\n  }, [items]);\n  useEffect(function () {\n    if (current) {\n      _scrollToMonth(new XDate(current));\n    }\n  }, [current]);\n  useDidUpdate(function () {\n    var currMont = currentMonth == null ? void 0 : currentMonth.clone();\n    if (currMont) {\n      var data = xdateToData(currMont);\n      onMonthChange == null ? void 0 : onMonthChange(data);\n      onVisibleMonthsChange == null ? void 0 : onVisibleMonthsChange([data]);\n    }\n  }, [currentMonth]);\n  var _scrollToDay = function _scrollToDay(date, offset, animated) {\n    var _initialDate$current3;\n    var scrollTo = parseDate(date);\n    var diffMonths = Math.round(initialDate == null ? void 0 : (_initialDate$current3 = initialDate.current) == null ? void 0 : _initialDate$current3.clone().setDate(1).diffMonths(scrollTo == null ? void 0 : scrollTo.clone().setDate(1)));\n    var scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize + (offset || 0);\n    if (!horizontal) {\n      var week = 0;\n      var days = page(scrollTo, firstDay);\n      for (var i = 0; i < days.length; i++) {\n        week = Math.floor(i / 7);\n        if (sameDate(days[i], scrollTo)) {\n          scrollAmount += 46 * week;\n          break;\n        }\n      }\n    }\n    if (scrollAmount !== 0) {\n      var _list$current;\n      list == null ? void 0 : (_list$current = list.current) == null ? void 0 : _list$current.scrollToOffset({\n        offset: scrollAmount,\n        animated: animated\n      });\n    }\n  };\n  var _scrollToMonth = useCallback(function (date) {\n    var _initialDate$current4;\n    var scrollTo = parseDate(date);\n    var diffMonths = Math.round(initialDate == null ? void 0 : (_initialDate$current4 = initialDate.current) == null ? void 0 : _initialDate$current4.clone().setDate(1).diffMonths(scrollTo == null ? void 0 : scrollTo.clone().setDate(1)));\n    var scrollAmount = calendarSize * (shouldUseAndroidRTLFix ? pastScrollRange - diffMonths : pastScrollRange + diffMonths);\n    if (scrollAmount !== 0) {\n      var _list$current2;\n      list == null ? void 0 : (_list$current2 = list.current) == null ? void 0 : _list$current2.scrollToOffset({\n        offset: scrollAmount,\n        animated: animateScroll\n      });\n    }\n  }, [calendarSize, shouldUseAndroidRTLFix, pastScrollRange, animateScroll]);\n  var addMonth = useCallback(function (count) {\n    var day = currentMonth == null ? void 0 : currentMonth.clone().addMonths(count, true);\n    if (sameMonth(day, currentMonth) || getDateIndex(day) === -1) {\n      return;\n    }\n    _scrollToMonth(day);\n    setCurrentMonth(day);\n  }, [currentMonth, _scrollToMonth]);\n  var getMarkedDatesForItem = useCallback(function (item) {\n    if (markedDates && item) {\n      for (var _ref of Object.entries(markedDates)) {\n        var _ref2 = _slicedToArray(_ref, 2);\n        var key = _ref2[0];\n        var _ = _ref2[1];\n        if (sameMonth(new XDate(key), new XDate(item))) {\n          return markedDates;\n        }\n      }\n    }\n  }, [markedDates]);\n  var getItemLayout = useCallback(function (_, index) {\n    return {\n      length: calendarSize,\n      offset: calendarSize * index,\n      index: index\n    };\n  }, []);\n  var isDateInRange = useCallback(function (date) {\n    for (var i = -range.current; i <= range.current; i++) {\n      var newMonth = currentMonth == null ? void 0 : currentMonth.clone().addMonths(i, true);\n      if (sameMonth(date, newMonth)) {\n        return true;\n      }\n    }\n    return false;\n  }, [currentMonth]);\n  var renderItem = useCallback(function (_ref3) {\n    var item = _ref3.item;\n    var dateString = toMarkingFormat(item);\n    var _dateString$split = dateString.split('-'),\n      _dateString$split2 = _slicedToArray(_dateString$split, 2),\n      year = _dateString$split2[0],\n      month = _dateString$split2[1];\n    var testId = `${testID}.item_${year}-${month}`;\n    return _jsxDEV(CalendarListItem, _objectSpread(_objectSpread({}, calendarProps), {}, {\n      testID: testId,\n      markedDates: getMarkedDatesForItem(item),\n      item: item,\n      style: calendarStyle,\n      horizontal: horizontal,\n      calendarWidth: calendarWidth,\n      calendarHeight: calendarHeight,\n      scrollToMonth: _scrollToMonth,\n      visible: isDateInRange(item)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }, _this);\n  }, [horizontal, calendarStyle, calendarWidth, testID, getMarkedDatesForItem, isDateInRange, calendarProps]);\n  var renderStaticHeader = function renderStaticHeader() {\n    if (staticHeader && horizontal) {\n      return _jsxDEV(CalendarHeader, _objectSpread(_objectSpread({}, headerProps), {}, {\n        testID: `${testID}.staticHeader`,\n        style: staticHeaderStyle,\n        month: currentMonth,\n        addMonth: addMonth,\n        accessibilityElementsHidden: true,\n        importantForAccessibility: 'no-hide-descendants'\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, _this);\n    }\n  };\n  var viewabilityConfig = useRef({\n    viewAreaCoveragePercentThreshold: 20\n  });\n  var onViewableItemsChanged = useCallback(function (_ref4) {\n    var _viewableItems$;\n    var viewableItems = _ref4.viewableItems;\n    var newVisibleMonth = parseDate((_viewableItems$ = viewableItems[0]) == null ? void 0 : _viewableItems$.item);\n    if (shouldUseAndroidRTLFix) {\n      var centerIndex = items.findIndex(function (item) {\n        return isEqual(parseDate(current), item);\n      });\n      var adjustedOffset = centerIndex - items.findIndex(function (item) {\n        return isEqual(newVisibleMonth, item);\n      });\n      visibleMonth.current = items[centerIndex + adjustedOffset];\n      setCurrentMonth(visibleMonth.current);\n    } else {\n      if (!sameDate(visibleMonth == null ? void 0 : visibleMonth.current, newVisibleMonth)) {\n        visibleMonth.current = newVisibleMonth;\n        setCurrentMonth(visibleMonth.current);\n      }\n    }\n  }, [items, shouldUseAndroidRTLFix, current]);\n  var viewabilityConfigCallbackPairs = useRef([{\n    viewabilityConfig: viewabilityConfig.current,\n    onViewableItemsChanged: onViewableItemsChanged\n  }]);\n  return _jsxDEV(View, {\n    style: style.current.flatListContainer,\n    testID: testID,\n    children: [_jsxDEV(FlatList, {\n      ref: list,\n      windowSize: shouldUseAndroidRTLFix ? pastScrollRange + futureScrollRange + 1 : undefined,\n      style: listStyle,\n      showsVerticalScrollIndicator: showScrollIndicator,\n      showsHorizontalScrollIndicator: showScrollIndicator,\n      data: items,\n      renderItem: renderItem,\n      getItemLayout: getItemLayout,\n      initialNumToRender: range.current,\n      initialScrollIndex: initialDateIndex,\n      viewabilityConfigCallbackPairs: viewabilityConfigCallbackPairs.current,\n      testID: `${testID}.list`,\n      onLayout: onLayout,\n      removeClippedSubviews: removeClippedSubviews,\n      pagingEnabled: pagingEnabled,\n      scrollEnabled: scrollEnabled,\n      scrollsToTop: scrollsToTop,\n      horizontal: horizontal,\n      keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n      keyExtractor: keyExtractor,\n      onEndReachedThreshold: onEndReachedThreshold,\n      onEndReached: onEndReached,\n      nestedScrollEnabled: nestedScrollEnabled,\n      onMomentumScrollBegin: onMomentumScrollBegin,\n      onMomentumScrollEnd: onMomentumScrollEnd,\n      onScrollBeginDrag: onScrollBeginDrag,\n      onScrollEndDrag: onScrollEndDrag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, _this), renderStaticHeader()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 13\n  }, _this);\n};\nexport default forwardRef(CalendarList);\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = _objectSpread(_objectSpread({}, Calendar.propTypes), {}, {\n  pastScrollRange: PropTypes.number,\n  futureScrollRange: PropTypes.number,\n  calendarWidth: PropTypes.number,\n  calendarHeight: PropTypes.number,\n  calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  staticHeader: PropTypes.bool,\n  showScrollIndicator: PropTypes.bool,\n  animateScroll: PropTypes.bool,\n  scrollEnabled: PropTypes.bool,\n  scrollsToTop: PropTypes.bool,\n  pagingEnabled: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  keyExtractor: PropTypes.func,\n  onEndReachedThreshold: PropTypes.number,\n  onEndReached: PropTypes.func,\n  nestedScrollEnabled: PropTypes.bool\n});","map":{"version":3,"names":["findIndex","PropTypes","XDate","React","forwardRef","useCallback","useEffect","useImperativeHandle","useMemo","useRef","useState","FlatList","View","extractCalendarProps","extractHeaderProps","parseDate","toMarkingFormat","xdateToData","page","sameDate","sameMonth","constants","useDidUpdate","styleConstructor","Calendar","CalendarListItem","CalendarHeader","isEqual","jsxDEV","_jsxDEV","CALENDAR_WIDTH","screenWidth","CALENDAR_HEIGHT","PAST_SCROLL_RANGE","FUTURE_SCROLL_RANGE","CalendarList","props","ref","scrollToDay","date","offset","animated","scrollToMonth","theme","current","firstDay","markedDates","headerStyle","onMonthChange","onVisibleMonthsChange","_props$pastScrollRang","pastScrollRange","_props$futureScrollRa","futureScrollRange","_props$calendarHeight","calendarHeight","_props$calendarWidth","calendarWidth","calendarStyle","_props$animateScroll","animateScroll","_props$showScrollIndi","showScrollIndicator","staticHeader","testID","propsStyle","style","onLayout","removeClippedSubviews","_props$horizontal","horizontal","pagingEnabled","_props$scrollEnabled","scrollEnabled","_props$nestedScrollEn","nestedScrollEnabled","_props$scrollsToTop","scrollsToTop","_props$keyExtractor","keyExtractor","_","index","String","keyboardShouldPersistTaps","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd","onEndReachedThreshold","onEndReached","calendarProps","headerProps","calendarSize","_useState","_useState2","_slicedToArray","currentMonth","setCurrentMonth","shouldUseAndroidRTLFix","isAndroidRTL","list","range","initialDate","visibleMonth","items","months","i","_initialDate$current","rangeDate","clone","addMonths","push","staticHeaderStyle","listStyle","container","initialDateIndex","item","_initialDate$current2","toString","getDateIndex","currMont","data","_initialDate$current3","scrollTo","diffMonths","Math","round","setDate","scrollAmount","week","days","length","floor","_list$current","scrollToOffset","_initialDate$current4","_list$current2","addMonth","count","day","getMarkedDatesForItem","_ref","Object","entries","_ref2","key","getItemLayout","isDateInRange","newMonth","renderItem","_ref3","dateString","_dateString$split","split","_dateString$split2","year","month","testId","_objectSpread","visible","fileName","_jsxFileName","lineNumber","columnNumber","_this","renderStaticHeader","accessibilityElementsHidden","importantForAccessibility","viewabilityConfig","viewAreaCoveragePercentThreshold","onViewableItemsChanged","_ref4","_viewableItems$","viewableItems","newVisibleMonth","centerIndex","adjustedOffset","viewabilityConfigCallbackPairs","flatListContainer","children","windowSize","undefined","showsVerticalScrollIndicator","showsHorizontalScrollIndicator","initialNumToRender","initialScrollIndex","displayName","propTypes","number","oneOfType","object","array","bool","oneOf","func"],"sources":["/home/micah/Documents/aia-staff-osen-main/node_modules/react-native-calendars/src/calendar-list/index.js"],"sourcesContent":["import findIndex from 'lodash/findIndex';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { FlatList, View } from 'react-native';\nimport { extractCalendarProps, extractHeaderProps } from '../componentUpdater';\nimport { parseDate, toMarkingFormat, xdateToData } from '../interface';\nimport { page, sameDate, sameMonth } from '../dateutils';\nimport constants from '../commons/constants';\nimport { useDidUpdate } from '../hooks';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nimport CalendarListItem from './item';\nimport CalendarHeader from '../calendar/header/index';\nimport isEqual from 'lodash/isEqual';\nconst CALENDAR_WIDTH = constants.screenWidth;\nconst CALENDAR_HEIGHT = 360;\nconst PAST_SCROLL_RANGE = 50;\nconst FUTURE_SCROLL_RANGE = 50;\n/**\n * @description: Calendar List component for both vertical and horizontal calendars\n * @extends: Calendar\n * @extendslink: docs/Calendar\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendarsList.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/assets/calendar-list.gif\n */\nconst CalendarList = (props, ref) => {\n    useImperativeHandle(ref, () => ({\n        scrollToDay: (date, offset, animated) => {\n            scrollToDay(date, offset, animated);\n        },\n        scrollToMonth: (date) => {\n            scrollToMonth(date);\n        }\n    }));\n    const { \n    /** Calendar props */\n    theme, current, firstDay, markedDates, headerStyle, onMonthChange, onVisibleMonthsChange, \n    /** CalendarList props */\n    pastScrollRange = PAST_SCROLL_RANGE, futureScrollRange = FUTURE_SCROLL_RANGE, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH, calendarStyle, animateScroll = false, showScrollIndicator = false, staticHeader, \n    /** View props */\n    testID, style: propsStyle, onLayout, removeClippedSubviews, \n    /** ScrollView props */\n    horizontal = false, pagingEnabled, scrollEnabled = true, nestedScrollEnabled = true, scrollsToTop = false, keyExtractor = (_, index) => String(index), keyboardShouldPersistTaps, onScrollBeginDrag, onScrollEndDrag, onMomentumScrollBegin, onMomentumScrollEnd, \n    /** FlatList props */\n    onEndReachedThreshold, onEndReached } = props;\n    const calendarProps = extractCalendarProps(props);\n    const headerProps = extractHeaderProps(props);\n    const calendarSize = horizontal ? calendarWidth : calendarHeight;\n    const [currentMonth, setCurrentMonth] = useState(parseDate(current));\n    const shouldUseAndroidRTLFix = useMemo(() => constants.isAndroidRTL && horizontal, [horizontal]);\n    const style = useRef(styleConstructor(theme));\n    const list = useRef();\n    const range = useRef(horizontal ? 1 : 3);\n    const initialDate = useRef(parseDate(current) || new XDate());\n    const visibleMonth = useRef(currentMonth);\n    const items = useMemo(() => {\n        const months = [];\n        for (let i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n            const rangeDate = initialDate.current?.clone().addMonths(i - pastScrollRange, true);\n            months.push(rangeDate);\n        }\n        return months;\n    }, [pastScrollRange, futureScrollRange]);\n    const staticHeaderStyle = useMemo(() => {\n        return [style.current.staticHeader, headerStyle];\n    }, [headerStyle]);\n    const listStyle = useMemo(() => {\n        return [style.current.container, propsStyle];\n    }, [propsStyle]);\n    const initialDateIndex = useMemo(() => {\n        return findIndex(items, function (item) {\n            return item.toString() === initialDate.current?.toString();\n        });\n    }, [items]);\n    const getDateIndex = useCallback((date) => {\n        return findIndex(items, function (item) {\n            return item.toString() === date.toString();\n        });\n    }, [items]);\n    useEffect(() => {\n        if (current) {\n            scrollToMonth(new XDate(current));\n        }\n    }, [current]);\n    useDidUpdate(() => {\n        const currMont = currentMonth?.clone();\n        if (currMont) {\n            const data = xdateToData(currMont);\n            onMonthChange?.(data);\n            onVisibleMonthsChange?.([data]);\n        }\n    }, [currentMonth]);\n    const scrollToDay = (date, offset, animated) => {\n        const scrollTo = parseDate(date);\n        const diffMonths = Math.round(initialDate?.current?.clone().setDate(1).diffMonths(scrollTo?.clone().setDate(1)));\n        let scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize + (offset || 0);\n        if (!horizontal) {\n            let week = 0;\n            const days = page(scrollTo, firstDay);\n            for (let i = 0; i < days.length; i++) {\n                week = Math.floor(i / 7);\n                if (sameDate(days[i], scrollTo)) {\n                    scrollAmount += 46 * week;\n                    break;\n                }\n            }\n        }\n        if (scrollAmount !== 0) {\n            // @ts-expect-error\n            list?.current?.scrollToOffset({ offset: scrollAmount, animated });\n        }\n    };\n    const scrollToMonth = useCallback((date) => {\n        const scrollTo = parseDate(date);\n        const diffMonths = Math.round(initialDate?.current?.clone().setDate(1).diffMonths(scrollTo?.clone().setDate(1)));\n        const scrollAmount = calendarSize * (shouldUseAndroidRTLFix ? pastScrollRange - diffMonths : pastScrollRange + diffMonths);\n        if (scrollAmount !== 0) {\n            // @ts-expect-error\n            list?.current?.scrollToOffset({ offset: scrollAmount, animated: animateScroll });\n        }\n    }, [calendarSize, shouldUseAndroidRTLFix, pastScrollRange, animateScroll]);\n    const addMonth = useCallback((count) => {\n        const day = currentMonth?.clone().addMonths(count, true);\n        if (sameMonth(day, currentMonth) || getDateIndex(day) === -1) {\n            return;\n        }\n        scrollToMonth(day);\n        setCurrentMonth(day);\n    }, [currentMonth, scrollToMonth]);\n    const getMarkedDatesForItem = useCallback((item) => {\n        if (markedDates && item) {\n            for (const [key, _] of Object.entries(markedDates)) {\n                if (sameMonth(new XDate(key), new XDate(item))) {\n                    return markedDates;\n                }\n            }\n        }\n    }, [markedDates]);\n    const getItemLayout = useCallback((_, index) => {\n        return {\n            length: calendarSize,\n            offset: calendarSize * index,\n            index\n        };\n    }, []);\n    const isDateInRange = useCallback((date) => {\n        for (let i = -range.current; i <= range.current; i++) {\n            const newMonth = currentMonth?.clone().addMonths(i, true);\n            if (sameMonth(date, newMonth)) {\n                return true;\n            }\n        }\n        return false;\n    }, [currentMonth]);\n    const renderItem = useCallback(({ item }) => {\n        const dateString = toMarkingFormat(item);\n        const [year, month] = dateString.split('-');\n        const testId = `${testID}.item_${year}-${month}`;\n        return (<CalendarListItem {...calendarProps} testID={testId} markedDates={getMarkedDatesForItem(item)} item={item} style={calendarStyle} \n        // @ts-expect-error - type mismatch - ScrollView's 'horizontal' is nullable\n        horizontal={horizontal} calendarWidth={calendarWidth} calendarHeight={calendarHeight} scrollToMonth={scrollToMonth} visible={isDateInRange(item)}/>);\n    }, [horizontal, calendarStyle, calendarWidth, testID, getMarkedDatesForItem, isDateInRange, calendarProps]);\n    const renderStaticHeader = () => {\n        if (staticHeader && horizontal) {\n            return (<CalendarHeader {...headerProps} testID={`${testID}.staticHeader`} style={staticHeaderStyle} month={currentMonth} addMonth={addMonth} accessibilityElementsHidden={true} // iOS\n             importantForAccessibility={'no-hide-descendants'} // Android\n            />);\n        }\n    };\n    /** Viewable month */\n    const viewabilityConfig = useRef({\n        viewAreaCoveragePercentThreshold: 20\n    });\n    const onViewableItemsChanged = useCallback(({ viewableItems }) => {\n        const newVisibleMonth = parseDate(viewableItems[0]?.item);\n        if (shouldUseAndroidRTLFix) {\n            const centerIndex = items.findIndex((item) => isEqual(parseDate(current), item));\n            const adjustedOffset = centerIndex - items.findIndex((item) => isEqual(newVisibleMonth, item));\n            visibleMonth.current = items[centerIndex + adjustedOffset];\n            setCurrentMonth(visibleMonth.current);\n        }\n        else {\n            if (!sameDate(visibleMonth?.current, newVisibleMonth)) {\n                visibleMonth.current = newVisibleMonth;\n                setCurrentMonth(visibleMonth.current);\n            }\n        }\n    }, [items, shouldUseAndroidRTLFix, current]);\n    const viewabilityConfigCallbackPairs = useRef([\n        {\n            viewabilityConfig: viewabilityConfig.current,\n            onViewableItemsChanged\n        },\n    ]);\n    return (<View style={style.current.flatListContainer} testID={testID}>\n      <FlatList \n    // @ts-expect-error\n    ref={list} windowSize={shouldUseAndroidRTLFix ? pastScrollRange + futureScrollRange + 1 : undefined} style={listStyle} showsVerticalScrollIndicator={showScrollIndicator} showsHorizontalScrollIndicator={showScrollIndicator} data={items} renderItem={renderItem} getItemLayout={getItemLayout} initialNumToRender={range.current} initialScrollIndex={initialDateIndex} viewabilityConfigCallbackPairs={viewabilityConfigCallbackPairs.current} testID={`${testID}.list`} onLayout={onLayout} removeClippedSubviews={removeClippedSubviews} pagingEnabled={pagingEnabled} scrollEnabled={scrollEnabled} scrollsToTop={scrollsToTop} horizontal={horizontal} keyboardShouldPersistTaps={keyboardShouldPersistTaps} keyExtractor={keyExtractor} onEndReachedThreshold={onEndReachedThreshold} onEndReached={onEndReached} nestedScrollEnabled={nestedScrollEnabled} onMomentumScrollBegin={onMomentumScrollBegin} onMomentumScrollEnd={onMomentumScrollEnd} onScrollBeginDrag={onScrollBeginDrag} onScrollEndDrag={onScrollEndDrag}/>\n      {renderStaticHeader()}\n    </View>);\n};\nexport default forwardRef(CalendarList);\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = {\n    ...Calendar.propTypes,\n    pastScrollRange: PropTypes.number,\n    futureScrollRange: PropTypes.number,\n    calendarWidth: PropTypes.number,\n    calendarHeight: PropTypes.number,\n    calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    staticHeader: PropTypes.bool,\n    showScrollIndicator: PropTypes.bool,\n    animateScroll: PropTypes.bool,\n    scrollEnabled: PropTypes.bool,\n    scrollsToTop: PropTypes.bool,\n    pagingEnabled: PropTypes.bool,\n    horizontal: PropTypes.bool,\n    keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n    keyExtractor: PropTypes.func,\n    onEndReachedThreshold: PropTypes.number,\n    onEndReached: PropTypes.func,\n    nestedScrollEnabled: PropTypes.bool\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}