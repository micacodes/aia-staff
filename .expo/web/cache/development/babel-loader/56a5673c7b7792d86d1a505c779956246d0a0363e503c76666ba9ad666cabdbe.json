{"ast":null,"code":"import { countries } from \"../constants/countries\";\nexport default function getCountriesByCallingCode(callingCode) {\n  var formatedCallingCode = String(callingCode).includes('+') ? callingCode : `+${callingCode}`;\n  if (formatedCallingCode.includes('+1')) {\n    var _matchingCountries = countries.filter(function (country) {\n      return formatedCallingCode.includes(country.callingCode);\n    });\n    var newMatchingCountries = _matchingCountries.filter(function (item) {\n      return item.phoneMasks.some(function (mask) {\n        return `+1${mask.replace(/\\D/g, '')}`.includes(formatedCallingCode);\n      });\n    });\n    var _formatedCountries = [];\n    newMatchingCountries.forEach(function (country) {\n      _formatedCountries.push({\n        name: country.name,\n        cca2: country.cca2,\n        flag: country.flag,\n        callingCode: country.callingCode\n      });\n    });\n    return _formatedCountries;\n  }\n  var matchingCountries = countries.filter(function (country) {\n    return formatedCallingCode === country.callingCode;\n  });\n  var formatedCountries = [];\n  matchingCountries.forEach(function (country) {\n    formatedCountries.push({\n      name: country.name,\n      cca2: country.cca2,\n      flag: country.flag,\n      callingCode: country.callingCode\n    });\n  });\n  return formatedCountries;\n}","map":{"version":3,"names":["countries","getCountriesByCallingCode","callingCode","formatedCallingCode","String","includes","matchingCountries","filter","country","newMatchingCountries","item","phoneMasks","some","mask","replace","formatedCountries","forEach","push","name","cca2","flag"],"sources":["/home/micah/Documents/aia-staff-osen-main/node_modules/react-native-international-phone-number/lib/utils/getCountriesByCallingCode.js"],"sourcesContent":["import { countries } from '../constants/countries';\n\nexport default function getCountriesByCallingCode(callingCode) {\n  const formatedCallingCode = String(callingCode).includes('+')\n    ? callingCode\n    : `+${callingCode}`;\n\n  if (formatedCallingCode.includes('+1')) {\n    const matchingCountries = countries.filter((country) => {\n      return formatedCallingCode.includes(country.callingCode);\n    });\n\n    const newMatchingCountries = matchingCountries.filter((item) => {\n      return item.phoneMasks.some((mask) => {\n        return `+1${mask.replace(/\\D/g, '')}`.includes(\n          formatedCallingCode\n        );\n      });\n    });\n\n    const formatedCountries = [];\n\n    newMatchingCountries.forEach((country) => {\n      formatedCountries.push({\n        name: country.name,\n        cca2: country.cca2,\n        flag: country.flag,\n        callingCode: country.callingCode,\n      });\n    });\n\n    return formatedCountries;\n  }\n\n  const matchingCountries = countries.filter((country) => {\n    return formatedCallingCode === country.callingCode;\n  });\n\n  const formatedCountries = [];\n\n  matchingCountries.forEach((country) => {\n    formatedCountries.push({\n      name: country.name,\n      cca2: country.cca2,\n      flag: country.flag,\n      callingCode: country.callingCode,\n    });\n  });\n\n  return formatedCountries;\n}\n"],"mappings":"AAAA,SAASA,SAAS;AAElB,eAAe,SAASC,yBAAyBA,CAACC,WAAW,EAAE;EAC7D,IAAMC,mBAAmB,GAAGC,MAAM,CAACF,WAAW,CAAC,CAACG,QAAQ,CAAC,GAAG,CAAC,GACzDH,WAAW,GACV,IAAGA,WAAY,EAAC;EAErB,IAAIC,mBAAmB,CAACE,QAAQ,CAAC,IAAI,CAAC,EAAE;IACtC,IAAMC,kBAAiB,GAAGN,SAAS,CAACO,MAAM,CAAC,UAACC,OAAO,EAAK;MACtD,OAAOL,mBAAmB,CAACE,QAAQ,CAACG,OAAO,CAACN,WAAW,CAAC;IAC1D,CAAC,CAAC;IAEF,IAAMO,oBAAoB,GAAGH,kBAAiB,CAACC,MAAM,CAAC,UAACG,IAAI,EAAK;MAC9D,OAAOA,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,UAACC,IAAI,EAAK;QACpC,OAAQ,KAAIA,IAAI,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAE,EAAC,CAACT,QAAQ,CAC5CF,mBACF,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAMY,kBAAiB,GAAG,EAAE;IAE5BN,oBAAoB,CAACO,OAAO,CAAC,UAACR,OAAO,EAAK;MACxCO,kBAAiB,CAACE,IAAI,CAAC;QACrBC,IAAI,EAAEV,OAAO,CAACU,IAAI;QAClBC,IAAI,EAAEX,OAAO,CAACW,IAAI;QAClBC,IAAI,EAAEZ,OAAO,CAACY,IAAI;QAClBlB,WAAW,EAAEM,OAAO,CAACN;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAOa,kBAAiB;EAC1B;EAEA,IAAMT,iBAAiB,GAAGN,SAAS,CAACO,MAAM,CAAC,UAACC,OAAO,EAAK;IACtD,OAAOL,mBAAmB,KAAKK,OAAO,CAACN,WAAW;EACpD,CAAC,CAAC;EAEF,IAAMa,iBAAiB,GAAG,EAAE;EAE5BT,iBAAiB,CAACU,OAAO,CAAC,UAACR,OAAO,EAAK;IACrCO,iBAAiB,CAACE,IAAI,CAAC;MACrBC,IAAI,EAAEV,OAAO,CAACU,IAAI;MAClBC,IAAI,EAAEX,OAAO,CAACW,IAAI;MAClBC,IAAI,EAAEZ,OAAO,CAACY,IAAI;MAClBlB,WAAW,EAAEM,OAAO,CAACN;IACvB,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAOa,iBAAiB;AAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}