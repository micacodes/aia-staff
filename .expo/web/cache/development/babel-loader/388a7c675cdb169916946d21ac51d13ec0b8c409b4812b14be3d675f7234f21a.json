{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStore from \"@react-native-async-storage/async-storage\";\nimport * as SecureStore from \"expo-secure-store\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar userSessionName = \"user_session\";\nexport var getAuthenticatedSession = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var parse = function parse(sessionRaw) {\n      if (!sessionRaw) {\n        return null;\n      }\n      return JSON.parse(sessionRaw);\n    };\n    var p = AsyncStore.getItem(userSessionName);\n    if (Platform.OS !== \"web\") {\n      p = SecureStore.getItemAsync(userSessionName);\n    }\n    console.log(\"Platform:\", Platform.OS);\n    return p.then(parse);\n  });\n  return function getAuthenticatedSession() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var setAuthenticatedSession = function () {\n  var _ref2 = _asyncToGenerator(function* (session) {\n    if (!session) {\n      return killAuthenticatedSession();\n    }\n    console.log(\"Saving session:\", session);\n    if (Platform.OS === \"web\") {\n      return AsyncStore.setItem(userSessionName, JSON.stringify(session));\n    }\n    return SecureStore.setItemAsync(userSessionName, JSON.stringify(session));\n  });\n  return function setAuthenticatedSession(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var killAuthenticatedSession = function killAuthenticatedSession() {\n  console.log(\"Killing session...\");\n  if (Platform.OS === \"web\") {\n    return AsyncStore.removeItem(userSessionName);\n  }\n  return SecureStore.deleteItemAsync(userSessionName);\n};","map":{"version":3,"names":["AsyncStore","SecureStore","Platform","userSessionName","getAuthenticatedSession","_ref","_asyncToGenerator","parse","sessionRaw","JSON","p","getItem","OS","getItemAsync","console","log","then","apply","arguments","setAuthenticatedSession","_ref2","session","killAuthenticatedSession","setItem","stringify","setItemAsync","_x","removeItem","deleteItemAsync"],"sources":["/home/micah/Documents/aia-staff-osen-main/utils/auth.ts"],"sourcesContent":["import AsyncStore from \"@react-native-async-storage/async-storage\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { Platform } from \"react-native\";\n\n// Session storage name\nconst userSessionName = \"user_session\";\n\n// Type for session context\nexport type SessionContext = {\n\tsessionToken: string;\n\tsession: {\n\t\tfirstName: string;\n\t\tlastName: string;\n\t\temail: string;\n\t\tphone: string;\n\t\tavatarUrl: string;\n\t\tid: string;\n\t\tvendor: Vendor;\n\t\tbranch: Branch;\n\t};\n} | null;\n\n// Function to get the authenticated session from storage\nexport const getAuthenticatedSession = async (): Promise<SessionContext> => {\n\tconst parse = (sessionRaw: string | null): SessionContext => {\n\t\tif (!sessionRaw) {\n\t\t\treturn null;\n\t\t}\n\t\treturn JSON.parse(sessionRaw);\n\t};\n\n\tlet p = AsyncStore.getItem(userSessionName);\n\n\t// Use SecureStore for mobile platforms\n\tif (Platform.OS !== \"web\") {\n\t\tp = SecureStore.getItemAsync(userSessionName);\n\t}\n\n\tconsole.log(\"Platform:\", Platform.OS);  // Log the platform for debugging\n\n\treturn p.then(parse);\n};\n\n// Function to set the authenticated session to storage\nexport const setAuthenticatedSession = async (session: SessionContext): Promise<void> => {\n\tif (!session) {\n\t\treturn killAuthenticatedSession();\n\t}\n\n\tconsole.log(\"Saving session:\", session); // Log session before saving\n\n\t// Save session based on platform\n\tif (Platform.OS === \"web\") {\n\t\treturn AsyncStore.setItem(userSessionName, JSON.stringify(session));\n\t}\n\n\t// For mobile platforms, use SecureStore\n\treturn SecureStore.setItemAsync(userSessionName, JSON.stringify(session));\n};\n\n// Function to kill/remove the authenticated session from storage\nexport const killAuthenticatedSession = () => {\n\tconsole.log(\"Killing session...\"); // Log when session is being removed\n\n\t// Remove session based on platform\n\tif (Platform.OS === \"web\") {\n\t\treturn AsyncStore.removeItem(userSessionName);\n\t}\n\n\t// For mobile platforms, use SecureStore\n\treturn SecureStore.deleteItemAsync(userSessionName);\n};\n"],"mappings":";AAAA,OAAOA,UAAU,MAAM,2CAA2C;AAClE,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAC,OAAAC,QAAA;AAIjD,IAAMC,eAAe,GAAG,cAAc;AAkBtC,OAAO,IAAMC,uBAAuB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAqC;IAC3E,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAIC,UAAyB,EAAqB;MAC5D,IAAI,CAACA,UAAU,EAAE;QAChB,OAAO,IAAI;MACZ;MACA,OAAOC,IAAI,CAACF,KAAK,CAACC,UAAU,CAAC;IAC9B,CAAC;IAED,IAAIE,CAAC,GAAGV,UAAU,CAACW,OAAO,CAACR,eAAe,CAAC;IAG3C,IAAID,QAAQ,CAACU,EAAE,KAAK,KAAK,EAAE;MAC1BF,CAAC,GAAGT,WAAW,CAACY,YAAY,CAACV,eAAe,CAAC;IAC9C;IAEAW,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEb,QAAQ,CAACU,EAAE,CAAC;IAErC,OAAOF,CAAC,CAACM,IAAI,CAACT,KAAK,CAAC;EACrB,CAAC;EAAA,gBAlBYH,uBAAuBA,CAAA;IAAA,OAAAC,IAAA,CAAAY,KAAA,OAAAC,SAAA;EAAA;AAAA,GAkBnC;AAGD,OAAO,IAAMC,uBAAuB;EAAA,IAAAC,KAAA,GAAAd,iBAAA,CAAG,WAAOe,OAAuB,EAAoB;IACxF,IAAI,CAACA,OAAO,EAAE;MACb,OAAOC,wBAAwB,CAAC,CAAC;IAClC;IAEAR,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEM,OAAO,CAAC;IAGvC,IAAInB,QAAQ,CAACU,EAAE,KAAK,KAAK,EAAE;MAC1B,OAAOZ,UAAU,CAACuB,OAAO,CAACpB,eAAe,EAAEM,IAAI,CAACe,SAAS,CAACH,OAAO,CAAC,CAAC;IACpE;IAGA,OAAOpB,WAAW,CAACwB,YAAY,CAACtB,eAAe,EAAEM,IAAI,CAACe,SAAS,CAACH,OAAO,CAAC,CAAC;EAC1E,CAAC;EAAA,gBAdYF,uBAAuBA,CAAAO,EAAA;IAAA,OAAAN,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAcnC;AAGD,OAAO,IAAMI,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAA,EAAS;EAC7CR,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EAGjC,IAAIb,QAAQ,CAACU,EAAE,KAAK,KAAK,EAAE;IAC1B,OAAOZ,UAAU,CAAC2B,UAAU,CAACxB,eAAe,CAAC;EAC9C;EAGA,OAAOF,WAAW,CAAC2B,eAAe,CAACzB,eAAe,CAAC;AACpD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}