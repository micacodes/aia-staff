{"ast":null,"code":"var _jsxFileName = \"/home/micah/Documents/aia-staff-osen-main/node_modules/react-native-gifted-charts/src/Components/BarAndLineChartsWrapper/renderLineInBarChart/renderDataPoints.tsx\",\n  _this = this;\nimport React, { Fragment } from 'react';\nimport { styles } from \"../../../BarChart/styles\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { getXForLineInBar, getYForLineInBar } from 'gifted-charts-core';\nimport { Rect, Text as CanvasText, Circle } from 'react-native-svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var renderDataPoints = function renderDataPoints(props) {\n  var data = props.data,\n    lineConfig = props.lineConfig,\n    barWidth = props.barWidth,\n    containerHeight = props.containerHeight,\n    maxValue = props.maxValue,\n    firstBarWidth = props.firstBarWidth,\n    yAxisLabelWidth = props.yAxisLabelWidth,\n    spacing = props.spacing;\n  return data.map(function (item, index) {\n    var _item$value;\n    if (index < lineConfig.startIndex || index > lineConfig.endIndex) {\n      return null;\n    }\n    var currentBarWidth = item.barWidth || barWidth || 30;\n    var customDataPoint = item.customDataPoint || lineConfig.customDataPoint;\n    var value = (_item$value = item.value) != null ? _item$value : item.stacks.reduce(function (total, item) {\n      return total + item.value;\n    }, 0);\n    if (customDataPoint) {\n      var _ref, _item$shiftY;\n      return _jsxDEV(View, {\n        style: [styles.customDataPointContainer, {\n          height: lineConfig.dataPointsHeight,\n          width: lineConfig.dataPointsWidth,\n          top: containerHeight - value * containerHeight / maxValue - ((_ref = (_item$shiftY = item.shiftY) != null ? _item$shiftY : lineConfig.shiftY) != null ? _ref : 0),\n          left: getXForLineInBar(index, firstBarWidth, currentBarWidth, yAxisLabelWidth, lineConfig, spacing)\n        }],\n        children: customDataPoint(item, index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, _this);\n    }\n    if (lineConfig.dataPointsShape === 'rectangular') {\n      return _jsxDEV(Fragment, {\n        children: [_jsxDEV(Rect, {\n          x: getXForLineInBar(index, firstBarWidth, currentBarWidth, yAxisLabelWidth, lineConfig, spacing),\n          y: getYForLineInBar(value, lineConfig.shiftY, containerHeight, maxValue) - lineConfig.dataPointsHeight / 2,\n          width: lineConfig.dataPointsWidth,\n          height: lineConfig.dataPointsHeight,\n          fill: lineConfig.dataPointsColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, _this), item.dataPointText && _jsxDEV(CanvasText, {\n          fill: item.textColor || lineConfig.textColor,\n          fontSize: item.textFontSize || lineConfig.textFontSize,\n          x: getXForLineInBar(index, firstBarWidth, currentBarWidth, yAxisLabelWidth, lineConfig, spacing) + (item.textShiftX || lineConfig.textShiftX || 0),\n          y: getYForLineInBar(value, lineConfig.shiftY, containerHeight, maxValue) - lineConfig.dataPointsHeight / 2 + (item.textShiftY || lineConfig.textShiftY || 0),\n          children: item.dataPointText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, _this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, _this);\n    }\n    return _jsxDEV(Fragment, {\n      children: [_jsxDEV(Circle, {\n        cx: getXForLineInBar(index, firstBarWidth, currentBarWidth, yAxisLabelWidth, lineConfig, spacing),\n        cy: getYForLineInBar(value, lineConfig.shiftY, containerHeight, maxValue),\n        r: lineConfig.dataPointsRadius,\n        fill: lineConfig.dataPointsColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, _this), item.dataPointText && _jsxDEV(CanvasText, {\n        fill: item.textColor || lineConfig.textColor,\n        fontSize: item.textFontSize || lineConfig.textFontSize,\n        x: getXForLineInBar(index, firstBarWidth, currentBarWidth, yAxisLabelWidth, lineConfig, spacing) + (item.textShiftX || lineConfig.textShiftX || 0),\n        y: getYForLineInBar(value, lineConfig.shiftY, containerHeight, maxValue) - lineConfig.dataPointsHeight / 2 + (item.textShiftY || lineConfig.textShiftY || 0),\n        children: item.dataPointText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, _this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, _this);\n  });\n};","map":{"version":3,"names":["React","Fragment","styles","View","getXForLineInBar","getYForLineInBar","Rect","Text","CanvasText","Circle","jsxDEV","_jsxDEV","renderDataPoints","props","data","lineConfig","barWidth","containerHeight","maxValue","firstBarWidth","yAxisLabelWidth","spacing","map","item","index","_item$value","startIndex","endIndex","currentBarWidth","customDataPoint","value","stacks","reduce","total","_ref","_item$shiftY","style","customDataPointContainer","height","dataPointsHeight","width","dataPointsWidth","top","shiftY","left","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","dataPointsShape","x","y","fill","dataPointsColor","dataPointText","textColor","fontSize","textFontSize","textShiftX","textShiftY","cx","cy","r","dataPointsRadius"],"sources":["/home/micah/Documents/aia-staff-osen-main/node_modules/react-native-gifted-charts/src/Components/BarAndLineChartsWrapper/renderLineInBarChart/renderDataPoints.tsx"],"sourcesContent":["import React, {Fragment} from 'react';\nimport {styles} from '../../../BarChart/styles';\nimport {View} from 'react-native';\nimport {getXForLineInBar, getYForLineInBar} from 'gifted-charts-core';\nimport {Rect, Text as CanvasText, Circle} from 'react-native-svg';\n\nexport const renderDataPoints = props => {\n  const {\n    data,\n    lineConfig,\n    barWidth,\n    containerHeight,\n    maxValue,\n    firstBarWidth,\n    yAxisLabelWidth,\n    spacing,\n  } = props;\n  return data.map((item: any, index: number) => {\n    if (index < lineConfig.startIndex || index > lineConfig.endIndex) {\n      return null;\n    }\n    const currentBarWidth = item.barWidth || barWidth || 30;\n    const customDataPoint = item.customDataPoint || lineConfig.customDataPoint;\n    const value =\n      item.value ?? item.stacks.reduce((total, item) => total + item.value, 0);\n    if (customDataPoint) {\n      return (\n        <View\n          style={[\n            styles.customDataPointContainer,\n            {\n              height: lineConfig.dataPointsHeight,\n              width: lineConfig.dataPointsWidth,\n              top:\n                containerHeight -\n                (value * containerHeight) / maxValue -\n                (item.shiftY ?? lineConfig.shiftY ?? 0),\n              left: getXForLineInBar(\n                index,\n                firstBarWidth,\n                currentBarWidth,\n                yAxisLabelWidth,\n                lineConfig,\n                spacing,\n              ),\n            },\n          ]}>\n          {customDataPoint(item, index)}\n        </View>\n      );\n    }\n    if (lineConfig.dataPointsShape === 'rectangular') {\n      return (\n        <Fragment key={index}>\n          <Rect\n            x={getXForLineInBar(\n              index,\n              firstBarWidth,\n              currentBarWidth,\n              yAxisLabelWidth,\n              lineConfig,\n              spacing,\n            )}\n            y={\n              getYForLineInBar(\n                value,\n                lineConfig.shiftY,\n                containerHeight,\n                maxValue,\n              ) -\n              lineConfig.dataPointsHeight / 2\n            }\n            width={lineConfig.dataPointsWidth}\n            height={lineConfig.dataPointsHeight}\n            fill={lineConfig.dataPointsColor}\n          />\n          {item.dataPointText && (\n            <CanvasText\n              fill={item.textColor || lineConfig.textColor}\n              fontSize={item.textFontSize || lineConfig.textFontSize}\n              x={\n                getXForLineInBar(\n                  index,\n                  firstBarWidth,\n                  currentBarWidth,\n                  yAxisLabelWidth,\n                  lineConfig,\n                  spacing,\n                ) + (item.textShiftX || lineConfig.textShiftX || 0)\n              }\n              y={\n                getYForLineInBar(\n                  value,\n                  lineConfig.shiftY,\n                  containerHeight,\n                  maxValue,\n                ) -\n                lineConfig.dataPointsHeight / 2 +\n                (item.textShiftY || lineConfig.textShiftY || 0)\n              }>\n              {item.dataPointText}\n            </CanvasText>\n          )}\n        </Fragment>\n      );\n    }\n    return (\n      <Fragment key={index}>\n        <Circle\n          cx={getXForLineInBar(\n            index,\n            firstBarWidth,\n            currentBarWidth,\n            yAxisLabelWidth,\n            lineConfig,\n            spacing,\n          )}\n          cy={getYForLineInBar(\n            value,\n            lineConfig.shiftY,\n            containerHeight,\n            maxValue,\n          )}\n          r={lineConfig.dataPointsRadius}\n          fill={lineConfig.dataPointsColor}\n        />\n        {item.dataPointText && (\n          <CanvasText\n            fill={item.textColor || lineConfig.textColor}\n            fontSize={item.textFontSize || lineConfig.textFontSize}\n            x={\n              getXForLineInBar(\n                index,\n                firstBarWidth,\n                currentBarWidth,\n                yAxisLabelWidth,\n                lineConfig,\n                spacing,\n              ) + (item.textShiftX || lineConfig.textShiftX || 0)\n            }\n            y={\n              getYForLineInBar(\n                value,\n                lineConfig.shiftY,\n                containerHeight,\n                maxValue,\n              ) -\n              lineConfig.dataPointsHeight / 2 +\n              (item.textShiftY || lineConfig.textShiftY || 0)\n            }>\n            {item.dataPointText}\n          </CanvasText>\n        )}\n      </Fragment>\n    );\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}