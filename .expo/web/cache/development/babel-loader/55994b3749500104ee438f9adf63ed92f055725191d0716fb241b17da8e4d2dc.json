{"ast":null,"code":"import { countries } from \"../constants/countries\";\nexport default function getCountriesByName(name, language) {\n  var matchingCountries = countries.filter(function (country) {\n    return country.name[language || 'en'].includes(name);\n  });\n  var formatedCountries = [];\n  matchingCountries.forEach(function (country) {\n    formatedCountries.push({\n      name: country.name,\n      cca2: country.cca2,\n      flag: country.flag,\n      callingCode: country.callingCode\n    });\n  });\n  return formatedCountries;\n}","map":{"version":3,"names":["countries","getCountriesByName","name","language","matchingCountries","filter","country","includes","formatedCountries","forEach","push","cca2","flag","callingCode"],"sources":["/home/micah/Documents/aia-staff-osen-main/node_modules/react-native-international-phone-number/lib/utils/getCountriesByName.js"],"sourcesContent":["import { countries } from '../constants/countries';\n\nexport default function getCountriesByName(name, language) {\n  const matchingCountries = countries.filter((country) => {\n    return country.name[language || 'en'].includes(name);\n  });\n\n  const formatedCountries = [];\n\n  matchingCountries.forEach((country) => {\n    formatedCountries.push({\n      name: country.name,\n      cca2: country.cca2,\n      flag: country.flag,\n      callingCode: country.callingCode,\n    });\n  });\n\n  return formatedCountries;\n}\n"],"mappings":"AAAA,SAASA,SAAS;AAElB,eAAe,SAASC,kBAAkBA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EACzD,IAAMC,iBAAiB,GAAGJ,SAAS,CAACK,MAAM,CAAC,UAACC,OAAO,EAAK;IACtD,OAAOA,OAAO,CAACJ,IAAI,CAACC,QAAQ,IAAI,IAAI,CAAC,CAACI,QAAQ,CAACL,IAAI,CAAC;EACtD,CAAC,CAAC;EAEF,IAAMM,iBAAiB,GAAG,EAAE;EAE5BJ,iBAAiB,CAACK,OAAO,CAAC,UAACH,OAAO,EAAK;IACrCE,iBAAiB,CAACE,IAAI,CAAC;MACrBR,IAAI,EAAEI,OAAO,CAACJ,IAAI;MAClBS,IAAI,EAAEL,OAAO,CAACK,IAAI;MAClBC,IAAI,EAAEN,OAAO,CAACM,IAAI;MAClBC,WAAW,EAAEP,OAAO,CAACO;IACvB,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAOL,iBAAiB;AAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}