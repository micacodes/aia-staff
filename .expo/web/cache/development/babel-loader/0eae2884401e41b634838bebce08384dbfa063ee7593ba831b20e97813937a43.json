{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"show\", \"popularCountries\", \"pickerButtonOnPress\", \"inputPlaceholder\", \"inputPlaceholderTextColor\", \"searchMessage\", \"lang\", \"style\", \"enableModalAvoiding\", \"androidWindowSoftInputMode\", \"onBackdropPress\", \"disableBackdrop\", \"excludedCountries\", \"initialState\", \"onRequestClose\", \"showOnly\", \"ListHeaderComponent\", \"itemTemplate\"],\n  _excluded2 = [\"showOnly\", \"popularCountries\", \"lang\", \"searchValue\", \"excludedCountries\", \"style\", \"pickerButtonOnPress\", \"ListHeaderComponent\", \"itemTemplate\"];\nvar _jsxFileName = \"/home/micah/Documents/aia-staff-osen-main/node_modules/react-native-country-codes-picker/index.tsx\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { useKeyboardStatus } from \"./helpers/useKeyboardStatus\";\nimport { CountryButton } from \"./components/CountryButton\";\nimport { countriesRemover } from \"./helpers/countriesRemover\";\nimport { removeDiacritics } from \"./helpers/diacriticsRemover\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport { countryCodes } from \"./constants/countryCodes\";\nexport { CountryButton } from \"./components/CountryButton\";\nvar height = Dimensions.get('window').height;\nexport var CountryPicker = function CountryPicker(_ref) {\n  var show = _ref.show,\n    popularCountries = _ref.popularCountries,\n    pickerButtonOnPress = _ref.pickerButtonOnPress,\n    inputPlaceholder = _ref.inputPlaceholder,\n    inputPlaceholderTextColor = _ref.inputPlaceholderTextColor,\n    searchMessage = _ref.searchMessage,\n    _ref$lang = _ref.lang,\n    lang = _ref$lang === void 0 ? 'en' : _ref$lang,\n    style = _ref.style,\n    enableModalAvoiding = _ref.enableModalAvoiding,\n    androidWindowSoftInputMode = _ref.androidWindowSoftInputMode,\n    onBackdropPress = _ref.onBackdropPress,\n    disableBackdrop = _ref.disableBackdrop,\n    excludedCountries = _ref.excludedCountries,\n    initialState = _ref.initialState,\n    onRequestClose = _ref.onRequestClose,\n    showOnly = _ref.showOnly,\n    ListHeaderComponent = _ref.ListHeaderComponent,\n    _ref$itemTemplate = _ref.itemTemplate,\n    ItemTemplate = _ref$itemTemplate === void 0 ? CountryButton : _ref$itemTemplate,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var filteredCodes = countriesRemover(excludedCountries);\n  var keyboardStatus = useKeyboardStatus();\n  var animationDriver = React.useRef(new Animated.Value(0)).current;\n  var animatedMargin = React.useRef(new Animated.Value(0)).current;\n  var _React$useState = React.useState(initialState || ''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    searchValue = _React$useState2[0],\n    setSearchValue = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    showModal = _React$useState4[0],\n    setShowModal = _React$useState4[1];\n  React.useEffect(function () {\n    if (show) {\n      setShowModal(true);\n    } else {\n      closeModal();\n    }\n  }, [show]);\n  React.useEffect(function () {\n    if (enableModalAvoiding && (keyboardStatus.keyboardPlatform === 'ios' || keyboardStatus.keyboardPlatform === 'android' && androidWindowSoftInputMode === 'pan')) {\n      if (keyboardStatus.isOpen) Animated.timing(animatedMargin, {\n        toValue: keyboardStatus.keyboardHeight,\n        duration: 190,\n        easing: Easing.ease,\n        useNativeDriver: false\n      }).start();\n      if (!keyboardStatus.isOpen) Animated.timing(animatedMargin, {\n        toValue: 0,\n        duration: 190,\n        easing: Easing.ease,\n        useNativeDriver: false\n      }).start();\n    }\n  }, [keyboardStatus.isOpen]);\n  var preparedPopularCountries = React.useMemo(function () {\n    return filteredCodes == null ? void 0 : filteredCodes.filter(function (country) {\n      return popularCountries == null ? void 0 : popularCountries.find(function (short) {\n        return (country == null ? void 0 : country.code) === (short == null ? void 0 : short.toUpperCase());\n      });\n    });\n  }, [popularCountries]);\n  var codes = React.useMemo(function () {\n    var newCodes = filteredCodes;\n    if (showOnly != null && showOnly.length) {\n      newCodes = filteredCodes == null ? void 0 : filteredCodes.filter(function (country) {\n        return showOnly == null ? void 0 : showOnly.find(function (short) {\n          return (country == null ? void 0 : country.code) === (short == null ? void 0 : short.toUpperCase());\n        });\n      });\n    }\n    newCodes.sort(function (a, b) {\n      return a == null ? void 0 : a.name[lang || 'en'].localeCompare(b == null ? void 0 : b.name[lang || 'en']);\n    });\n    return newCodes;\n  }, [showOnly, excludedCountries, lang]);\n  var resultCountries = React.useMemo(function () {\n    var lowerSearchValue = searchValue.toLowerCase();\n    return codes.filter(function (country) {\n      if (country != null && country.dial_code.includes(searchValue) || country != null && country.name[lang || 'en'].toLowerCase().includes(lowerSearchValue) || removeDiacritics(country == null ? void 0 : country.name[lang || 'en'].toLowerCase()).includes(lowerSearchValue)) {\n        return country;\n      }\n    });\n  }, [searchValue]);\n  var modalPosition = animationDriver.interpolate({\n    inputRange: [0, 1],\n    outputRange: [height, 0],\n    extrapolate: 'clamp'\n  });\n  var modalBackdropFade = animationDriver.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [0, 0.5, 1],\n    extrapolate: 'clamp'\n  });\n  var openModal = function openModal() {\n    Animated.timing(animationDriver, {\n      toValue: 1,\n      duration: 400,\n      useNativeDriver: true\n    }).start();\n  };\n  var closeModal = function closeModal() {\n    Animated.timing(animationDriver, {\n      toValue: 0,\n      duration: 400,\n      useNativeDriver: true\n    }).start(function () {\n      return setShowModal(false);\n    });\n  };\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item,\n      index = _ref2.index;\n    var itemName = item == null ? void 0 : item.name[lang];\n    var checkName = itemName != null && itemName.length ? itemName : item == null ? void 0 : item.name['en'];\n    return _jsxDEV(ItemTemplate, {\n      item: item,\n      style: style,\n      name: checkName,\n      onPress: function onPress() {\n        Keyboard.dismiss();\n        typeof pickerButtonOnPress === 'function' && pickerButtonOnPress(item);\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, _this);\n  };\n  var onStartShouldSetResponder = function onStartShouldSetResponder() {\n    onBackdropPress == null ? void 0 : onBackdropPress();\n    return false;\n  };\n  return _jsxDEV(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: showModal,\n    onShow: openModal,\n    onRequestClose: onRequestClose,\n    children: _jsxDEV(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'flex-end'\n      },\n      children: [!disableBackdrop && _jsxDEV(Animated.View, {\n        onStartShouldSetResponder: onStartShouldSetResponder,\n        style: [{\n          flex: 1,\n          opacity: modalBackdropFade,\n          backgroundColor: 'rgba(0,0,0,0.45)',\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          justifyContent: 'flex-end'\n        }, style == null ? void 0 : style.backdrop]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }, _this), _jsxDEV(Animated.View, {\n        style: [styles.modal, style == null ? void 0 : style.modal, {\n          transform: [{\n            translateY: modalPosition\n          }]\n        }],\n        children: [_jsxDEV(View, {\n          style: {\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          children: _jsxDEV(TextInput, _objectSpread({\n            style: [styles.searchBar, style == null ? void 0 : style.textInput],\n            value: searchValue,\n            onChangeText: setSearchValue,\n            placeholder: inputPlaceholder || 'Search your country',\n            placeholderTextColor: inputPlaceholderTextColor || '#8c8c8c'\n          }, rest), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, _this), _jsxDEV(View, {\n          style: [styles.line, style == null ? void 0 : style.line]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, _this), resultCountries.length === 0 ? _jsxDEV(View, {\n          style: [styles.countryMessage, style == null ? void 0 : style.countryMessageContainer],\n          children: _jsxDEV(Text, {\n            style: [{\n              color: '#8c8c8c',\n              fontSize: 16\n            }, style == null ? void 0 : style.searchMessageText],\n            children: searchMessage || 'Sorry we cant find your country :('\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, _this) : _jsxDEV(FlatList, _objectSpread({\n          showsVerticalScrollIndicator: false,\n          data: resultCountries || codes,\n          keyExtractor: function keyExtractor(item, index) {\n            return '' + item + index;\n          },\n          initialNumToRender: 10,\n          maxToRenderPerBatch: 10,\n          style: [style == null ? void 0 : style.itemsList],\n          keyboardShouldPersistTaps: 'handled',\n          renderItem: renderItem,\n          ListHeaderComponent: popularCountries && ListHeaderComponent && !searchValue ? _jsxDEV(ListHeaderComponent, {\n            countries: preparedPopularCountries,\n            lang: lang,\n            onPress: function onPress(item) {\n              Keyboard.dismiss();\n              typeof pickerButtonOnPress === 'function' && pickerButtonOnPress(item);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 33\n          }, _this) : null\n        }, rest), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, _this), _jsxDEV(Animated.View, {\n        style: [styles.modalInner, style == null ? void 0 : style.modalInner, {\n          height: animatedMargin\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 9\n  }, _this);\n};\nexport var CountryList = function CountryList(_ref3) {\n  var showOnly = _ref3.showOnly,\n    popularCountries = _ref3.popularCountries,\n    _ref3$lang = _ref3.lang,\n    lang = _ref3$lang === void 0 ? 'en' : _ref3$lang,\n    _ref3$searchValue = _ref3.searchValue,\n    searchValue = _ref3$searchValue === void 0 ? '' : _ref3$searchValue,\n    excludedCountries = _ref3.excludedCountries,\n    style = _ref3.style,\n    pickerButtonOnPress = _ref3.pickerButtonOnPress,\n    ListHeaderComponent = _ref3.ListHeaderComponent,\n    _ref3$itemTemplate = _ref3.itemTemplate,\n    ItemTemplate = _ref3$itemTemplate === void 0 ? CountryButton : _ref3$itemTemplate,\n    rest = _objectWithoutProperties(_ref3, _excluded2);\n  var filteredCodes = countriesRemover(excludedCountries);\n  var preparedPopularCountries = React.useMemo(function () {\n    return filteredCodes == null ? void 0 : filteredCodes.filter(function (country) {\n      return popularCountries == null ? void 0 : popularCountries.find(function (short) {\n        return (country == null ? void 0 : country.code) === (short == null ? void 0 : short.toUpperCase());\n      });\n    });\n  }, [popularCountries]);\n  var codes = React.useMemo(function () {\n    var newCodes = filteredCodes;\n    if (showOnly != null && showOnly.length) {\n      newCodes = filteredCodes == null ? void 0 : filteredCodes.filter(function (country) {\n        return showOnly == null ? void 0 : showOnly.find(function (short) {\n          return (country == null ? void 0 : country.code) === (short == null ? void 0 : short.toUpperCase());\n        });\n      });\n    }\n    return newCodes;\n  }, [showOnly, excludedCountries]);\n  var resultCountries = React.useMemo(function () {\n    var lowerSearchValue = searchValue.toLowerCase();\n    return codes.filter(function (country) {\n      if (country != null && country.dial_code.includes(searchValue) || country != null && country.name[lang || 'en'].toLowerCase().includes(lowerSearchValue.trim()) || removeDiacritics(country == null ? void 0 : country.name[lang || 'en'].toLowerCase()).includes(lowerSearchValue.trim())) {\n        return country;\n      }\n    });\n  }, [searchValue]);\n  var renderItem = function renderItem(_ref4) {\n    var item = _ref4.item,\n      index = _ref4.index;\n    var itemName = item == null ? void 0 : item.name[lang];\n    var checkName = itemName.length ? itemName : item == null ? void 0 : item.name['en'];\n    return _jsxDEV(ItemTemplate, {\n      item: item,\n      style: style,\n      name: checkName,\n      onPress: function onPress() {\n        Keyboard.dismiss();\n        typeof pickerButtonOnPress === 'function' && pickerButtonOnPress(item);\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }, _this);\n  };\n  return _jsxDEV(FlatList, _objectSpread({\n    showsVerticalScrollIndicator: false,\n    data: resultCountries || codes,\n    keyExtractor: function keyExtractor(item, index) {\n      return '' + item + index;\n    },\n    initialNumToRender: 10,\n    maxToRenderPerBatch: 10,\n    style: [style == null ? void 0 : style.itemsList],\n    keyboardShouldPersistTaps: 'handled',\n    renderItem: renderItem,\n    ListHeaderComponent: popularCountries && ListHeaderComponent && _jsxDEV(ListHeaderComponent, {\n      countries: preparedPopularCountries,\n      lang: lang,\n      onPress: function onPress(item) {\n        Keyboard.dismiss();\n        typeof pickerButtonOnPress === 'function' && pickerButtonOnPress(item);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 17\n    }, _this)\n  }, rest), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 412,\n    columnNumber: 9\n  }, _this);\n};\nvar styles = {\n  container: {\n    flex: 1,\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'flex-end'\n  },\n  modal: {\n    backgroundColor: 'white',\n    width: '100%',\n    maxWidth: Platform.OS === \"web\" ? 600 : undefined,\n    borderTopRightRadius: 15,\n    borderTopLeftRadius: 15,\n    padding: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 6\n    },\n    bottom: 0,\n    zIndex: 10,\n    shadowOpacity: 0.37,\n    shadowRadius: 7.49,\n    elevation: 10\n  },\n  modalInner: {\n    zIndex: 99,\n    backgroundColor: 'white',\n    width: '100%'\n  },\n  searchBar: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n    borderRadius: 10,\n    height: 40,\n    padding: 5\n  },\n  countryMessage: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 250\n  },\n  line: {\n    width: '100%',\n    height: 1.5,\n    borderRadius: 2,\n    backgroundColor: '#eceff1',\n    alignSelf: 'center',\n    marginVertical: 5\n  }\n};","map":{"version":3,"names":["React","FlatList","TextInput","View","Text","Animated","Dimensions","Easing","Platform","Keyboard","Modal","useKeyboardStatus","CountryButton","countriesRemover","removeDiacritics","jsxDEV","_jsxDEV","countryCodes","height","get","CountryPicker","_ref","show","popularCountries","pickerButtonOnPress","inputPlaceholder","inputPlaceholderTextColor","searchMessage","_ref$lang","lang","style","enableModalAvoiding","androidWindowSoftInputMode","onBackdropPress","disableBackdrop","excludedCountries","initialState","onRequestClose","showOnly","ListHeaderComponent","_ref$itemTemplate","itemTemplate","ItemTemplate","rest","_objectWithoutProperties","_excluded","filteredCodes","keyboardStatus","animationDriver","useRef","Value","current","animatedMargin","_React$useState","useState","_React$useState2","_slicedToArray","searchValue","setSearchValue","_React$useState3","_React$useState4","showModal","setShowModal","useEffect","closeModal","keyboardPlatform","isOpen","timing","toValue","keyboardHeight","duration","easing","ease","useNativeDriver","start","preparedPopularCountries","useMemo","filter","country","find","short","code","toUpperCase","codes","newCodes","length","sort","a","b","name","localeCompare","resultCountries","lowerSearchValue","toLowerCase","dial_code","includes","modalPosition","interpolate","inputRange","outputRange","extrapolate","modalBackdropFade","openModal","renderItem","_ref2","item","index","itemName","checkName","onPress","dismiss","fileName","_jsxFileName","lineNumber","columnNumber","_this","onStartShouldSetResponder","animationType","transparent","visible","onShow","children","flex","justifyContent","opacity","backgroundColor","position","width","backdrop","styles","modal","transform","translateY","flexDirection","alignItems","_objectSpread","searchBar","textInput","value","onChangeText","placeholder","placeholderTextColor","line","countryMessage","countryMessageContainer","color","fontSize","searchMessageText","showsVerticalScrollIndicator","data","keyExtractor","initialNumToRender","maxToRenderPerBatch","itemsList","keyboardShouldPersistTaps","countries","modalInner","CountryList","_ref3","_ref3$lang","_ref3$searchValue","_ref3$itemTemplate","_excluded2","trim","_ref4","container","left","right","top","bottom","maxWidth","OS","undefined","borderTopRightRadius","borderTopLeftRadius","padding","shadowColor","shadowOffset","zIndex","shadowOpacity","shadowRadius","elevation","borderRadius","alignSelf","marginVertical"],"sources":["/home/micah/Documents/aia-staff-osen-main/node_modules/react-native-country-codes-picker/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n    FlatList,\r\n    TextInput,\r\n    View,\r\n    Text,\r\n    Animated,\r\n    Dimensions,\r\n    Easing,\r\n    Platform,\r\n    Keyboard,\r\n    ViewStyle,\r\n    Modal,\r\n    TextStyle\r\n} from 'react-native';\r\nimport { CountryItem, ItemTemplateProps, Style, ListHeaderComponentProps } from \"./types/Types\";\r\nimport { useKeyboardStatus } from \"./helpers/useKeyboardStatus\";\r\nimport { CountryButton } from \"./components/CountryButton\";\r\nimport { countriesRemover } from \"./helpers/countriesRemover\";\r\nimport { removeDiacritics } from './helpers/diacriticsRemover';\r\n\r\nexport { countryCodes } from './constants/countryCodes'\r\nexport { CountryButton } from \"./components/CountryButton\";\r\nexport type { CountryItem, ItemTemplateProps, Style, ListHeaderComponentProps } from \"./types/Types\";\r\n\r\n\r\nconst height = Dimensions.get('window').height;\r\n\r\n/**\r\n * Country picker component\r\n * @param {?boolean} show Hide or show component by using this props\r\n * @param {?boolean} disableBackdrop Hide or show component by using this props\r\n * @param {?boolean} enableModalAvoiding Is modal should avoid keyboard ? On android to work required to use with androidWindowSoftInputMode with value pan, by default android will avoid keyboard by itself\r\n * @param {?string} androidWindowSoftInputMode Hide or show component by using this props\r\n * @param {?string} inputPlaceholder Text to showing in input\r\n * @param {?string} searchMessage Text to show user when no country to show\r\n * @param {?string} lang Current selected lang by user\r\n * @param {?string} initialState Here you should define initial dial code\r\n * @param {?array} excludedCountries Array of countries which should be excluded from picker\r\n * @param {Function} pickerButtonOnPress Function to receive selected country\r\n * @param {Function} onBackdropPress Function to receive selected country\r\n * @param {Function} onRequestClose Function to receive selected country\r\n * @param {?Object} style Styles\r\n * @param {?React.ReactNode} itemTemplate Country list template\r\n * @param rest\r\n */\r\n\r\ninterface Props {\r\n    excludedCountries?: string[],\r\n    showOnly?: string[],\r\n    popularCountries?: string[],\r\n\r\n    style?: Style,\r\n\r\n    show: boolean,\r\n    enableModalAvoiding?: boolean,\r\n    disableBackdrop?: boolean,\r\n\r\n    onBackdropPress?: (...args: any) => any,\r\n    pickerButtonOnPress: (item: CountryItem) => any,\r\n    itemTemplate?: (props: ItemTemplateProps) => JSX.Element,\r\n    ListHeaderComponent?: (props: ListHeaderComponentProps) => JSX.Element,\r\n    onRequestClose?: (...args: any) => any,\r\n\r\n    lang: string,\r\n    inputPlaceholder?: string,\r\n    inputPlaceholderTextColor?: TextStyle['color'],\r\n    searchMessage?: string,\r\n    androidWindowSoftInputMode?: string,\r\n    initialState?: string,\r\n}\r\n\r\nexport const CountryPicker = ({\r\n    show,\r\n    popularCountries,\r\n    pickerButtonOnPress,\r\n    inputPlaceholder,\r\n    inputPlaceholderTextColor,\r\n    searchMessage,\r\n    lang = 'en',\r\n    style,\r\n    enableModalAvoiding,\r\n    androidWindowSoftInputMode,\r\n    onBackdropPress,\r\n    disableBackdrop,\r\n    excludedCountries,\r\n    initialState,\r\n    onRequestClose,\r\n    showOnly,\r\n    ListHeaderComponent,\r\n    itemTemplate: ItemTemplate = CountryButton,\r\n    ...rest\r\n}: Props) => {\r\n    // ToDo refactor exclude and showOnly props to objects\r\n    let filteredCodes = countriesRemover(excludedCountries);\r\n    const keyboardStatus = useKeyboardStatus();\r\n    const animationDriver = React.useRef(new Animated.Value(0)).current;\r\n    const animatedMargin = React.useRef(new Animated.Value(0)).current;\r\n    const [searchValue, setSearchValue] = React.useState<string>(initialState || '');\r\n    const [showModal, setShowModal] = React.useState<boolean>(false);\r\n\r\n    React.useEffect(() => {\r\n        if (show) {\r\n            setShowModal(true);\r\n        } else {\r\n            closeModal();\r\n        }\r\n    }, [show]);\r\n\r\n    React.useEffect(() => {\r\n        if (\r\n            enableModalAvoiding &&\r\n            (\r\n                keyboardStatus.keyboardPlatform === 'ios' ||\r\n                (keyboardStatus.keyboardPlatform === 'android' &&\r\n                    androidWindowSoftInputMode === 'pan')\r\n            )\r\n        ) {\r\n            if (keyboardStatus.isOpen)\r\n                Animated.timing(animatedMargin, {\r\n                    toValue: keyboardStatus.keyboardHeight,\r\n                    duration: 190,\r\n                    easing: Easing.ease,\r\n                    useNativeDriver: false,\r\n                }).start();\r\n\r\n            if (!keyboardStatus.isOpen)\r\n                Animated.timing(animatedMargin, {\r\n                    toValue: 0,\r\n                    duration: 190,\r\n                    easing: Easing.ease,\r\n                    useNativeDriver: false,\r\n                }).start();\r\n        }\r\n    }, [keyboardStatus.isOpen]);\r\n\r\n    const preparedPopularCountries = React.useMemo(() => {\r\n        return filteredCodes?.filter(country => {\r\n            return (popularCountries?.find(short => country?.code === short?.toUpperCase()));\r\n        });\r\n    }, [popularCountries]);\r\n\r\n    const codes = React.useMemo(() => {\r\n        let newCodes = filteredCodes;\r\n\r\n        if (showOnly?.length) {\r\n            newCodes = filteredCodes?.filter(country => {\r\n                return (showOnly?.find(short => country?.code === short?.toUpperCase()));\r\n            });\r\n        }\r\n        newCodes.sort((a, b) => (a?.name[lang || 'en'].localeCompare(b?.name[lang || 'en'])));\r\n\r\n        return newCodes;\r\n    }, [showOnly, excludedCountries, lang]);\r\n\r\n    const resultCountries = React.useMemo(() => {\r\n        const lowerSearchValue = searchValue.toLowerCase();\r\n\r\n        return codes.filter((country) => {\r\n            if (country?.dial_code.includes(searchValue) ||\r\n                country?.name[lang || 'en'].toLowerCase().includes(lowerSearchValue) ||\r\n                removeDiacritics(country?.name[lang || 'en'].toLowerCase()).includes(lowerSearchValue)\r\n            ) {\r\n                return country;\r\n            }\r\n        });\r\n    }, [searchValue]);\r\n\r\n    const modalPosition = animationDriver.interpolate({\r\n        inputRange: [0, 1],\r\n        outputRange: [height, 0],\r\n        extrapolate: 'clamp',\r\n    });\r\n\r\n    const modalBackdropFade = animationDriver.interpolate({\r\n        inputRange: [0, 0.5, 1],\r\n        outputRange: [0, 0.5, 1],\r\n        extrapolate: 'clamp'\r\n    });\r\n\r\n    const openModal = () => {\r\n        Animated.timing(animationDriver, {\r\n            toValue: 1,\r\n            duration: 400,\r\n            useNativeDriver: true,\r\n        }).start();\r\n    };\r\n\r\n    const closeModal = () => {\r\n        Animated.timing(animationDriver, {\r\n            toValue: 0,\r\n            duration: 400,\r\n            useNativeDriver: true,\r\n        }).start(() => setShowModal(false));\r\n    };\r\n\r\n    const renderItem = ({ item, index }: { item: CountryItem, index: number }) => {\r\n        let itemName = item?.name[lang];\r\n        let checkName = itemName?.length ? itemName : item?.name['en'];\r\n\r\n        return (\r\n            <ItemTemplate\r\n                key={index}\r\n                item={item}\r\n                style={style}\r\n                name={checkName}\r\n                onPress={() => {\r\n                    Keyboard.dismiss();\r\n                    typeof pickerButtonOnPress === 'function' && pickerButtonOnPress(item);\r\n                }}\r\n            />\r\n        );\r\n    };\r\n\r\n    const onStartShouldSetResponder = () => {\r\n        onBackdropPress?.();\r\n        return false;\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            animationType=\"fade\"\r\n            transparent={true}\r\n            visible={showModal}\r\n            onShow={openModal}\r\n            onRequestClose={onRequestClose}\r\n        >\r\n            <View\r\n                style={{\r\n                    flex: 1,\r\n                    justifyContent: 'flex-end'\r\n                }}\r\n            >\r\n                {!disableBackdrop && (\r\n                    <Animated.View\r\n                        onStartShouldSetResponder={onStartShouldSetResponder}\r\n                        style={[\r\n                            {\r\n                                flex: 1,\r\n                                opacity: modalBackdropFade,\r\n                                backgroundColor: 'rgba(0,0,0,0.45)',\r\n                                position: 'absolute',\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                justifyContent: 'flex-end'\r\n                            },\r\n                            style?.backdrop\r\n                        ]}\r\n                    />\r\n                )}\r\n                <Animated.View\r\n                    style={[\r\n                        styles.modal,\r\n                        style?.modal,\r\n                        {\r\n                            transform: [\r\n                                {\r\n                                    translateY: modalPosition,\r\n                                },\r\n                            ],\r\n                        },\r\n                    ]}\r\n                >\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <TextInput\r\n                            style={[styles.searchBar, style?.textInput]}\r\n                            value={searchValue}\r\n                            onChangeText={setSearchValue}\r\n                            placeholder={inputPlaceholder || 'Search your country'}\r\n                            placeholderTextColor={inputPlaceholderTextColor || '#8c8c8c'}\r\n                            {...rest}\r\n                        />\r\n                    </View>\r\n                    <View style={[styles.line, style?.line]} />\r\n                    {resultCountries.length === 0 ? (\r\n                        <View style={[styles.countryMessage, style?.countryMessageContainer]}>\r\n                            <Text\r\n                                style={[\r\n                                    {\r\n                                        color: '#8c8c8c',\r\n                                        fontSize: 16,\r\n                                    },\r\n                                    style?.searchMessageText,\r\n                                ]}\r\n                            >\r\n                                {searchMessage || 'Sorry we cant find your country :('}\r\n                            </Text>\r\n                        </View>\r\n                    ) : (\r\n                        <FlatList\r\n                            showsVerticalScrollIndicator={false}\r\n                            data={(resultCountries || codes)}\r\n                            keyExtractor={(item, index) => '' + item + index}\r\n                            initialNumToRender={10}\r\n                            maxToRenderPerBatch={10}\r\n                            style={[style?.itemsList]}\r\n                            keyboardShouldPersistTaps={'handled'}\r\n                            renderItem={renderItem}\r\n                            ListHeaderComponent={(popularCountries && ListHeaderComponent && !searchValue) ?\r\n                                <ListHeaderComponent\r\n                                    countries={preparedPopularCountries}\r\n                                    lang={lang}\r\n                                    onPress={(item: CountryItem) => {\r\n                                        Keyboard.dismiss();\r\n                                        typeof pickerButtonOnPress === 'function' && pickerButtonOnPress(item);\r\n                                    }}\r\n                                />\r\n                                : null\r\n                            }\r\n                            {...rest}\r\n                        />\r\n                    )}\r\n                </Animated.View>\r\n                <Animated.View\r\n                    style={[\r\n                        styles.modalInner,\r\n                        style?.modalInner,\r\n                        {\r\n                            height: animatedMargin,\r\n                        },\r\n                    ]}\r\n                />\r\n            </View>\r\n        </Modal>\r\n    )\r\n};\r\n\r\ninterface CountryListProps {\r\n    lang: string,\r\n    searchValue?: string,\r\n    excludedCountries?: string[],\r\n    popularCountries?: string[],\r\n    showOnly?: string[],\r\n\r\n    ListHeaderComponent?: (props: ListHeaderComponentProps) => JSX.Element,\r\n    itemTemplate?: (props: ItemTemplateProps) => JSX.Element,\r\n    pickerButtonOnPress: (item: CountryItem) => any,\r\n\r\n    style?: Style,\r\n}\r\n\r\nexport const CountryList = ({\r\n    showOnly,\r\n    popularCountries,\r\n    lang = 'en',\r\n    searchValue = '',\r\n    excludedCountries,\r\n    style,\r\n    pickerButtonOnPress,\r\n    ListHeaderComponent,\r\n    itemTemplate: ItemTemplate = CountryButton,\r\n    ...rest\r\n}: CountryListProps) => {\r\n    // ToDo refactor exclude and showOnly props to objects\r\n    let filteredCodes = countriesRemover(excludedCountries);\r\n\r\n    const preparedPopularCountries = React.useMemo(() => {\r\n        return filteredCodes?.filter(country => {\r\n            return (popularCountries?.find(short => country?.code === short?.toUpperCase()));\r\n        });\r\n    }, [popularCountries]);\r\n\r\n    const codes = React.useMemo(() => {\r\n        let newCodes = filteredCodes;\r\n\r\n        if (showOnly?.length) {\r\n            newCodes = filteredCodes?.filter(country => {\r\n                return (showOnly?.find(short => country?.code === short?.toUpperCase()));\r\n            });\r\n        }\r\n\r\n        return newCodes\r\n    }, [showOnly, excludedCountries]);\r\n\r\n    const resultCountries = React.useMemo(() => {\r\n        const lowerSearchValue = searchValue.toLowerCase();\r\n\r\n        return codes.filter((country) => {\r\n            if (country?.dial_code.includes(searchValue) ||\r\n                country?.name[lang || 'en'].toLowerCase().includes(lowerSearchValue.trim()) ||\r\n                removeDiacritics(country?.name[lang || 'en'].toLowerCase()).includes(lowerSearchValue.trim())\r\n            ) {\r\n                return country;\r\n            }\r\n        });\r\n    }, [searchValue]);\r\n\r\n    const renderItem = ({ item, index }: { item: CountryItem, index: number }) => {\r\n        let itemName = item?.name[lang];\r\n        let checkName = itemName.length ? itemName : item?.name['en'];\r\n\r\n        return (\r\n            <ItemTemplate\r\n                key={index}\r\n                item={item}\r\n                style={style}\r\n                name={checkName}\r\n                onPress={() => {\r\n                    Keyboard.dismiss();\r\n                    typeof pickerButtonOnPress === 'function' && pickerButtonOnPress(item);\r\n                }}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <FlatList\r\n            showsVerticalScrollIndicator={false}\r\n            data={(resultCountries || codes)}\r\n            keyExtractor={(item, index) => '' + item + index}\r\n            initialNumToRender={10}\r\n            maxToRenderPerBatch={10}\r\n            style={[style?.itemsList]}\r\n            keyboardShouldPersistTaps={'handled'}\r\n            renderItem={renderItem}\r\n            ListHeaderComponent={(popularCountries && ListHeaderComponent) &&\r\n                <ListHeaderComponent\r\n                    countries={preparedPopularCountries}\r\n                    lang={lang}\r\n                    onPress={(item: CountryItem) => {\r\n                        Keyboard.dismiss();\r\n                        typeof pickerButtonOnPress === 'function' && pickerButtonOnPress(item);\r\n                    }}\r\n                />\r\n            }\r\n\r\n            {...rest}\r\n        />\r\n    )\r\n};\r\n\r\n\r\ntype StyleKeys = 'container' | 'modal' | 'modalInner' | 'searchBar' | 'countryMessage' | 'line';\r\n\r\nconst styles: { [key in StyleKeys]: ViewStyle } = {\r\n    container: {\r\n        flex: 1,\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    modal: {\r\n        backgroundColor: 'white',\r\n        width: '100%',\r\n        maxWidth: Platform.OS === \"web\" ? 600 : undefined,\r\n        borderTopRightRadius: 15,\r\n        borderTopLeftRadius: 15,\r\n        padding: 10,\r\n\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 6,\r\n        },\r\n        bottom: 0,\r\n        zIndex: 10,\r\n        shadowOpacity: 0.37,\r\n        shadowRadius: 7.49,\r\n\r\n        elevation: 10,\r\n    },\r\n    modalInner: {\r\n        zIndex: 99,\r\n        backgroundColor: 'white',\r\n        width: '100%',\r\n    },\r\n    searchBar: {\r\n        flex: 1,\r\n        backgroundColor: '#f5f5f5',\r\n        borderRadius: 10,\r\n        height: 40,\r\n        padding: 5,\r\n    },\r\n    countryMessage: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: 250,\r\n    },\r\n    line: {\r\n        width: '100%',\r\n        height: 1.5,\r\n        borderRadius: 2,\r\n        backgroundColor: '#eceff1',\r\n        alignSelf: 'center',\r\n        marginVertical: 5,\r\n    },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}