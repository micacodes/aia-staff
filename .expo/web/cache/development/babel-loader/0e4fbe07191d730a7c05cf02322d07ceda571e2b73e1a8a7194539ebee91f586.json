{"ast":null,"code":"import { countries } from \"../constants/countries\";\nexport default function getInputMask(phoneNumber, callingCode, cca2, customMask) {\n  var matrix = '';\n  countries.forEach(function (item) {\n    var newCode = item.callingCode.replace(/[\\s#]/g, '');\n    var phoneMask = Array.isArray(customMask) && customMask || item.phoneMasks;\n    if (item.cca2 === cca2 && callingCode && callingCode.includes(newCode)) {\n      if (phoneMask.length === 1) {\n        if (newCode === '+1' && cca2 !== 'CA' && cca2 !== 'US') {\n          matrix = phoneMask[0].replace(/[0-9]/g, '').trim();\n        } else {\n          matrix = phoneMask[0].replace(/[0-9]/g, '#').trim();\n        }\n      } else if (phoneMask.length > 1) {\n        var hasDifferentLengthsOfPhoneNumbers = false;\n        for (var _i = 0; _i < phoneMask.length; _i++) {\n          if (phoneNumber.replace(/\\s/g, '').length > phoneMask[0].replace(/\\s/g, '').length && newCode !== '+1') {\n            hasDifferentLengthsOfPhoneNumbers = true;\n          }\n        }\n        if (!hasDifferentLengthsOfPhoneNumbers) {\n          if (cca2 === 'CA' || cca2 === 'US') {\n            matrix = phoneMask[0].replace(/\\d/g, '#').trim();\n          } else {\n            matrix = phoneMask[0].replace(/[0-9]/g, '#').trim();\n          }\n        } else {\n          for (var _i2 = 0; _i2 < phoneMask.length; _i2++) {\n            if (phoneNumber.replace(/\\s/g, '').length > phoneMask[_i2].replace(/\\s/g, '').length && phoneMask[_i2 + 1]) {\n              matrix = phoneMask[_i2 + 1].replace(/[0-9]/g, '#').trim();\n            }\n          }\n        }\n      }\n    }\n  });\n  var i = 0;\n  var newValue = phoneNumber.replace(/\\D/g, '');\n  return matrix.replace(/(?!\\+)./g, function (a) {\n    return /[#\\d]/.test(a) && i < newValue.length ? newValue.charAt(i++) : i >= newValue.length ? '' : a;\n  });\n}","map":{"version":3,"names":["countries","getInputMask","phoneNumber","callingCode","cca2","customMask","matrix","forEach","item","newCode","replace","phoneMask","Array","isArray","phoneMasks","includes","length","trim","hasDifferentLengthsOfPhoneNumbers","i","newValue","a","test","charAt"],"sources":["/home/micah/Documents/aia-staff-osen-main/node_modules/react-native-international-phone-number/lib/utils/getInputMask.js"],"sourcesContent":["import { countries } from '../constants/countries';\n\nexport default function getInputMask(\n  phoneNumber,\n  callingCode,\n  cca2,\n  customMask\n) {\n  let matrix = '';\n\n  countries.forEach((item) => {\n    const newCode = item.callingCode.replace(/[\\s#]/g, '');\n    const phoneMask =\n      (Array.isArray(customMask) && customMask) || item.phoneMasks;\n\n    if (\n      item.cca2 === cca2 &&\n      callingCode &&\n      callingCode.includes(newCode)\n    ) {\n      if (phoneMask.length === 1) {\n        if (newCode === '+1' && cca2 !== 'CA' && cca2 !== 'US') {\n          matrix = phoneMask[0].replace(/[0-9]/g, '').trim();\n        } else {\n          matrix = phoneMask[0].replace(/[0-9]/g, '#').trim();\n        }\n      } else if (phoneMask.length > 1) {\n        let hasDifferentLengthsOfPhoneNumbers = false;\n\n        for (let i = 0; i < phoneMask.length; i++) {\n          if (\n            phoneNumber.replace(/\\s/g, '').length >\n              phoneMask[0].replace(/\\s/g, '').length &&\n            newCode !== '+1'\n          ) {\n            hasDifferentLengthsOfPhoneNumbers = true;\n          }\n        }\n\n        if (!hasDifferentLengthsOfPhoneNumbers) {\n          if (cca2 === 'CA' || cca2 === 'US') {\n            matrix = phoneMask[0].replace(/\\d/g, '#').trim();\n          } else {\n            matrix = phoneMask[0].replace(/[0-9]/g, '#').trim();\n          }\n        } else {\n          for (let i = 0; i < phoneMask.length; i++) {\n            if (\n              phoneNumber.replace(/\\s/g, '').length >\n                phoneMask[i].replace(/\\s/g, '').length &&\n              phoneMask[i + 1]\n            ) {\n              matrix = phoneMask[i + 1].replace(/[0-9]/g, '#').trim();\n            }\n          }\n        }\n      }\n    }\n  });\n\n  let i = 0;\n  const newValue = phoneNumber.replace(/\\D/g, '');\n\n  return matrix.replace(/(?!\\+)./g, function (a) {\n    return /[#\\d]/.test(a) && i < newValue.length\n      ? newValue.charAt(i++)\n      : i >= newValue.length\n      ? ''\n      : a;\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}