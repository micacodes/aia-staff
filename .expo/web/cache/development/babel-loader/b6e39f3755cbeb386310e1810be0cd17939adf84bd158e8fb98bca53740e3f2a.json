{"ast":null,"code":"import { countries } from \"../constants/countries\";\nexport default function getCountryByCca2(cca2) {\n  var matchingCountry = countries.filter(function (country) {\n    return country.cca2.toLowerCase() === cca2.toLowerCase();\n  })[0];\n  if (matchingCountry) {\n    matchingCountry = {\n      name: matchingCountry.name,\n      cca2: matchingCountry.cca2,\n      flag: matchingCountry.flag,\n      callingCode: matchingCountry.callingCode\n    };\n    return matchingCountry;\n  } else {\n    return {};\n  }\n}","map":{"version":3,"names":["countries","getCountryByCca2","cca2","matchingCountry","filter","country","toLowerCase","name","flag","callingCode"],"sources":["/home/micah/Documents/aia-staff-osen-main/node_modules/react-native-international-phone-number/lib/utils/getCountryByCca2.js"],"sourcesContent":["import { countries } from '../constants/countries';\n\nexport default function getCountryByCca2(cca2) {\n  let matchingCountry = countries.filter((country) => {\n    return country.cca2.toLowerCase() === cca2.toLowerCase();\n  })[0];\n\n  if (matchingCountry) {\n    matchingCountry = {\n      name: matchingCountry.name,\n      cca2: matchingCountry.cca2,\n      flag: matchingCountry.flag,\n      callingCode: matchingCountry.callingCode,\n    };\n\n    return matchingCountry;\n  } else {\n    return {};\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS;AAElB,eAAe,SAASC,gBAAgBA,CAACC,IAAI,EAAE;EAC7C,IAAIC,eAAe,GAAGH,SAAS,CAACI,MAAM,CAAC,UAACC,OAAO,EAAK;IAClD,OAAOA,OAAO,CAACH,IAAI,CAACI,WAAW,CAAC,CAAC,KAAKJ,IAAI,CAACI,WAAW,CAAC,CAAC;EAC1D,CAAC,CAAC,CAAC,CAAC,CAAC;EAEL,IAAIH,eAAe,EAAE;IACnBA,eAAe,GAAG;MAChBI,IAAI,EAAEJ,eAAe,CAACI,IAAI;MAC1BL,IAAI,EAAEC,eAAe,CAACD,IAAI;MAC1BM,IAAI,EAAEL,eAAe,CAACK,IAAI;MAC1BC,WAAW,EAAEN,eAAe,CAACM;IAC/B,CAAC;IAED,OAAON,eAAe;EACxB,CAAC,MAAM;IACL,OAAO,CAAC,CAAC;EACX;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}